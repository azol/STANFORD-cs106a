<project name="Lecture11" default="dist">
	<property name="src" location="./"/>
	<property name="lib" location="./"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>

	<path id="classpath">
		<fileset dir="${lib}" includes="**/*.jar"/>
	</path>

	<target name="init">
		<mkdir dir="${build}"/>
	</target>

	<target name="compile-ClickForFace" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="ClickForFace.java" includeantruntime="false"/>
	</target>

	<target name="dist-ClickForFace" depends="compile-ClickForFace">
		<jar destfile="${dist}/ClickForFace.jar" basedir="${build}" includes="ClickForFace.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="ClickForFace"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-DragObjects" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="DragObjects.java" includeantruntime="false"/>
	</target>

	<target name="dist-DragObjects" depends="compile-DragObjects">
		<jar destfile="${dist}/DragObjects.jar" basedir="${build}" includes="DragObjects.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="DragObjects"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-DrawFace" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="DrawFace.java" includeantruntime="false"/>
	</target>

	<target name="dist-DrawFace" depends="compile-DrawFace">
		<jar destfile="${dist}/DrawFace.jar" basedir="${build}" includes="DrawFace.class, GFace.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="DrawFace"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-MouseTracker" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="MouseTracker.java" includeantruntime="false"/>
	</target>

	<target name="dist-MouseTracker" depends="compile-MouseTracker">
		<jar destfile="${dist}/MouseTracker.jar" basedir="${build}" includes="MouseTracker.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="MouseTracker"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-UfoGame" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="UfoGame.java" includeantruntime="false"/>
	</target>

	<target name="dist-UfoGame" depends="compile-UfoGame">
		<jar destfile="${dist}/UfoGame.jar" basedir="${build}" includes="UfoGame.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="UfoGame"/>
			</manifest>
		</jar>
	</target>

	<target name="dist" depends="dist-ClickForFace, dist-DragObjects, dist-DrawFace, dist-MouseTracker, dist-UfoGame">
		<zip destfile="${dist}/${ant.project.name}.zip">
			<zipfileset dir="${dist}" includes="**/*.jar" prefix="${ant.project.name}"/>
		</zip>
	</target>

	<target name="run-ClickForFace" depends="dist-ClickForFace">
		<java jar="${dist}/ClickForFace.jar" fork="true"/>
	</target>

	<target name="run-DragObjects" depends="dist-DragObjects">
		<java jar="${dist}/DragObjects.jar" fork="true"/>
	</target>

	<target name="run-DrawFace" depends="dist-DrawFace">
		<java jar="${dist}/DrawFace.jar" fork="true"/>
	</target>

	<target name="run-MouseTracker" depends="dist-MouseTracker">
		<java jar="${dist}/MouseTracker.jar" fork="true"/>
	</target>

	<target name="run-UfoGame" depends="dist-UfoGame">
		<java jar="${dist}/UfoGame.jar" fork="true"/>
	</target>

	<target name="run">
		<echo message="ant run-ClickForFace"/>
		<echo message="ant run-DragObjects"/>
		<echo message="ant run-DrawFace"/>
		<echo message="ant run-MouseTracker"/>
		<echo message="ant run-UfoGame"/>
	</target>

	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>
