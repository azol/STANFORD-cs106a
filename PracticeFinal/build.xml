<project name="PracticeFinal" default="dist">
	<property name="src" location="./"/>
	<property name="lib" location="./"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>

	<path id="classpath">
		<fileset dir="${lib}" includes="**/*.jar"/>
	</path>

	<target name="init">
		<mkdir dir="${build}"/>
	</target>

	<target name="compile-CheckUpperLeftCorner" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="CheckUpperLeftCorner.java" includeantruntime="false"/>
	</target>

	<target name="dist-CheckUpperLeftCorner" depends="compile-CheckUpperLeftCorner">
		<jar destfile="${dist}/CheckUpperLeftCorner.jar" basedir="${build}" includes="CheckUpperLeftCorner.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="CheckUpperLeftCorner"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-CheckWordLadder" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="CheckWordLadder.java Lexicon.java" includeantruntime="false"/>
	</target>

	<target name="dist-CheckWordLadder" depends="compile-CheckWordLadder">
		<jar destfile="${dist}/CheckWordLadder.jar" basedir="${build}" includes="CheckWordLadder.class Lexicon.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="CheckWordLadder"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-EtchASketch" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="EtchASketch.java" includeantruntime="false"/>
	</target>

	<target name="dist-EtchASketch" depends="compile-EtchASketch">
		<jar destfile="${dist}/EtchASketch.jar" basedir="${build}" includes="EtchASketch.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="EtchASketch"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-MyEtchASketch" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="MyEtchASketch.java" includeantruntime="false"/>
	</target>

	<target name="dist-MyEtchASketch" depends="compile-MyEtchASketch">
		<jar destfile="${dist}/MyEtchASketch.jar" basedir="${build}" includes="MyEtchASketch.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="MyEtchASketch"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-Problem1a" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="Problem1a.java" includeantruntime="false"/>
	</target>

	<target name="dist-Problem1a" depends="compile-Problem1a">
		<jar destfile="${dist}/Problem1a.jar" basedir="${build}" includes="Problem1a.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="Problem1a"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-Problem1b" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="Problem1b.java" includeantruntime="false"/>
	</target>

	<target name="dist-Problem1b" depends="compile-Problem1b">
		<jar destfile="${dist}/Problem1b.jar" basedir="${build}" includes="Problem1b.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="Problem1b"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-StringQueueDemo" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="StringQueueDemo.java, StringQueue.java, MinimalStringQueue.java" includeantruntime="false"/>
	</target>

	<target name="dist-StringQueueDemo" depends="compile-StringQueueDemo">
		<jar destfile="${dist}/StringQueueDemo.jar" basedir="${build}" includes="StringQueueDemo.class, StringQueue.class, MinimalStringQueue.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="StringQueueDemo"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-IsGooglewhack" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="IsGooglewhack.java" includeantruntime="false"/>
	</target>

	<target name="dist-IsGooglewhack" depends="compile-IsGooglewhack">
		<jar destfile="${dist}/IsGooglewhack.jar" basedir="${build}" includes="IsGooglewhack.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="IsGooglewhack"/>
			</manifest>
		</jar>
	</target>

	<target name="compile-CommonKeyValuePairs" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" includes="CommonKeyValuePairs.java" includeantruntime="false"/>
	</target>

	<target name="dist-CommonKeyValuePairs" depends="compile-CommonKeyValuePairs">
		<jar destfile="${dist}/CommonKeyValuePairs.jar" basedir="${build}" includes="CommonKeyValuePairs.class">
			<zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="META-INF/MANIFEST.MF"/>
			<manifest>
				<attribute name="Main-Class" value="CommonKeyValuePairs"/>
			</manifest>
		</jar>
	</target>

	<target name="dist" depends="dist-CheckUpperLeftCorner, dist-CheckWordLadder, dist-EtchASketch, dist-MyEtchASketch, dist-Problem1a, dist-Problem1b, dist-StringQueueDemo, dist-IsGooglewhack, dist-CommonKeyValuePairs">
		<zip destfile="${dist}/${ant.project.name}.zip">
			<zipfileset dir="${dist}" includes="**/*.jar" prefix="${ant.project.name}"/>
		</zip>
	</target>

	<target name="run-CheckUpperLeftCorner" depends="dist-CheckUpperLeftCorner">
		<java jar="${dist}/CheckUpperLeftCorner.jar" fork="true"/>
	</target>

	<target name="run-CheckWordLadder" depends="dist-CheckWordLadder">
		<java jar="${dist}/CheckWordLadder.jar" fork="true"/>
	</target>

	<target name="run-EtchASketch" depends="dist-EtchASketch">
		<java jar="${dist}/EtchASketch.jar" fork="true"/>
	</target>

	<target name="run-MyEtchASketch" depends="dist-MyEtchASketch">
		<java jar="${dist}/EtchASketch.jar" fork="true"/>
	</target>

	<target name="run-Problem1a" depends="dist-Problem1a">
		<java jar="${dist}/Problem1a.jar" fork="true"/>
	</target>

	<target name="run-Problem1b" depends="dist-Problem1b">
		<java jar="${dist}/Problem1b.jar" fork="true"/>
	</target>

	<target name="run-StringQueueDemo" depends="dist-StringQueueDemo">
		<java jar="${dist}/StringQueueDemo.jar" fork="true"/>
	</target>

	<target name="run-CommonKeyValuePairs" depends="dist-CommonKeyValuePairs">
		<java jar="${dist}/CommonKeyValuePairs.jar" fork="true"/>
	</target>

	<target name="run-IsGooglewhack" depends="dist-IsGooglewhack">
		<java jar="${dist}/IsGooglewhack.jar" fork="true"/>
	</target>

	<target name="run">
		<echo message="ant run-CheckUpperLeftCorner"/>
		<echo message="ant run-CheckWordLadder"/>
		<echo message="ant run-EtchASketch"/>
		<echo message="ant run-MyEtchASketch"/>
		<echo message="ant run-Problem1a"/>
		<echo message="ant run-Problem1b"/>
		<echo message="ant run-StringQueueDemo"/>
		<echo message="ant run-IsGooglewhack"/>
		<echo message="ant run-CommonKeyValuePairs"/>
	</target>

	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>
